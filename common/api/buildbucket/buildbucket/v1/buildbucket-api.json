{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "https://www.googleapis.com/auth/userinfo.email"
        }
      }
    }
  },
  "basePath": "/_ah/api/buildbucket/v1",
  "baseUrl": "https://cr-buildbucket.appspot.com/_ah/api/buildbucket/v1",
  "batchPath": "batch",
  "description": "API for scheduling builds.",
  "discoveryVersion": "v1",
  "icons": {
    "x16": "https://www.google.com/images/icons/product/search-16.gif",
    "x32": "https://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "buildbucket:v1",
  "kind": "discovery#restDescription",
  "methods": {
    "backfill_tag_index": {
      "description": "Backfills TagIndex entities from builds.",
      "httpMethod": "POST",
      "id": "buildbucket.backfill_tag_index",
      "parameterOrder": [
        "tag_key"
      ],
      "parameters": {
        "tag_key": {
          "location": "query",
          "required": true,
          "type": "string"
        }
      },
      "path": "backfill_tag_index",
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "cancel": {
      "description": "Cancels a build.",
      "httpMethod": "POST",
      "id": "buildbucket.cancel",
      "parameterOrder": [
        "id"
      ],
      "parameters": {
        "id": {
          "format": "int64",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "path": "builds/{id}/cancel",
      "request": {
        "$ref": "LegacyApiCancelRequestBodyMessage",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "LegacyApiBuildResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "cancel_batch": {
      "description": "Cancels builds.",
      "httpMethod": "POST",
      "id": "buildbucket.cancel_batch",
      "path": "builds/cancel",
      "request": {
        "$ref": "LegacyApiCancelBatchRequestMessage",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "LegacyApiCancelBatchResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "delete_many_builds": {
      "description": "Deletes scheduled or started builds in a bucket.",
      "httpMethod": "POST",
      "id": "buildbucket.delete_many_builds",
      "parameterOrder": [
        "bucket",
        "status"
      ],
      "parameters": {
        "bucket": {
          "location": "path",
          "required": true,
          "type": "string"
        },
        "created_by": {
          "location": "query",
          "type": "string"
        },
        "status": {
          "enum": [
            "COMPLETED",
            "SCHEDULED",
            "STARTED"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "location": "query",
          "required": true,
          "type": "string"
        },
        "tag": {
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "path": "bucket/{bucket}/delete",
      "response": {
        "$ref": "LegacyApiDeleteManyBuildsResponse"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "fail": {
      "description": "Marks a build as failed.",
      "httpMethod": "POST",
      "id": "buildbucket.fail",
      "parameterOrder": [
        "id"
      ],
      "parameters": {
        "id": {
          "format": "int64",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "path": "builds/{id}/fail",
      "request": {
        "$ref": "LegacyApiFailRequestBodyMessage",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "LegacyApiBuildResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "fix_builds": {
      "description": "Fixes all builds.",
      "httpMethod": "POST",
      "id": "buildbucket.fix_builds",
      "path": "fix_builds",
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "get": {
      "description": "Returns a build by id.",
      "httpMethod": "GET",
      "id": "buildbucket.get",
      "parameterOrder": [
        "id"
      ],
      "parameters": {
        "id": {
          "format": "int64",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "path": "builds/{id}",
      "response": {
        "$ref": "LegacyApiBuildResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "get_bucket": {
      "description": "Returns bucket information.",
      "httpMethod": "GET",
      "id": "buildbucket.get_bucket",
      "parameterOrder": [
        "bucket"
      ],
      "parameters": {
        "bucket": {
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "path": "buckets/{bucket}",
      "response": {
        "$ref": "LegacyApiBucketMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "heartbeat": {
      "description": "Updates build lease.",
      "httpMethod": "POST",
      "id": "buildbucket.heartbeat",
      "parameterOrder": [
        "id"
      ],
      "parameters": {
        "id": {
          "format": "int64",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "path": "builds/{id}/heartbeat",
      "request": {
        "$ref": "LegacyApiHeartbeatRequestBodyMessage",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "LegacyApiBuildResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "heartbeat_batch": {
      "description": "Updates multiple build leases.",
      "httpMethod": "POST",
      "id": "buildbucket.heartbeat_batch",
      "path": "heartbeat",
      "request": {
        "$ref": "LegacyApiHeartbeatBatchRequestMessage",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "LegacyApiHeartbeatBatchResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "lease": {
      "description": "Leases a build. Response may contain an error.",
      "httpMethod": "POST",
      "id": "buildbucket.lease",
      "parameterOrder": [
        "id"
      ],
      "parameters": {
        "id": {
          "format": "int64",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "path": "builds/{id}/lease",
      "request": {
        "$ref": "LegacyApiLeaseRequestBodyMessage",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "LegacyApiBuildResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "pause": {
      "description": "Pauses or unpause a bucket.",
      "httpMethod": "POST",
      "id": "buildbucket.pause",
      "parameterOrder": [
        "bucket",
        "is_paused"
      ],
      "parameters": {
        "bucket": {
          "location": "path",
          "required": true,
          "type": "string"
        },
        "is_paused": {
          "location": "query",
          "required": true,
          "type": "boolean"
        }
      },
      "path": "buckets/{bucket}/pause",
      "response": {
        "$ref": "LegacyApiPauseResponse"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "peek": {
      "description": "Returns available builds.",
      "httpMethod": "GET",
      "id": "buildbucket.peek",
      "parameters": {
        "bucket": {
          "location": "query",
          "repeated": true,
          "type": "string"
        },
        "max_builds": {
          "format": "int32",
          "location": "query",
          "type": "integer"
        },
        "start_cursor": {
          "location": "query",
          "type": "string"
        }
      },
      "path": "peek",
      "response": {
        "$ref": "LegacyApiSearchResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "put": {
      "description": "Creates a new build.",
      "httpMethod": "PUT",
      "id": "buildbucket.put",
      "path": "builds",
      "request": {
        "$ref": "LegacyApiPutRequestMessage",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "LegacyApiBuildResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "put_batch": {
      "description": "Creates builds.",
      "httpMethod": "PUT",
      "id": "buildbucket.put_batch",
      "path": "builds/batch",
      "request": {
        "$ref": "LegacyApiPutBatchRequestMessage",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "LegacyApiPutBatchResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "reset": {
      "description": "Forcibly unleases a build and resets its state to SCHEDULED.",
      "httpMethod": "POST",
      "id": "buildbucket.reset",
      "parameterOrder": [
        "id"
      ],
      "parameters": {
        "id": {
          "format": "int64",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "path": "builds/{id}/reset",
      "response": {
        "$ref": "LegacyApiBuildResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "retry": {
      "description": "Retries an existing build.",
      "httpMethod": "PUT",
      "id": "buildbucket.retry",
      "parameterOrder": [
        "id"
      ],
      "parameters": {
        "id": {
          "format": "int64",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "path": "builds/{id}/retry",
      "request": {
        "$ref": "LegacyApiRetryRequestMessage",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "LegacyApiBuildResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "search": {
      "description": "Searches for builds.",
      "httpMethod": "GET",
      "id": "buildbucket.search",
      "parameters": {
        "bucket": {
          "location": "query",
          "repeated": true,
          "type": "string"
        },
        "canary": {
          "location": "query",
          "type": "boolean"
        },
        "cancelation_reason": {
          "enum": [
            "CANCELED_EXPLICITLY",
            "TIMEOUT"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "location": "query",
          "type": "string"
        },
        "created_by": {
          "location": "query",
          "type": "string"
        },
        "creation_ts_high": {
          "format": "int64",
          "location": "query",
          "type": "string"
        },
        "creation_ts_low": {
          "format": "int64",
          "location": "query",
          "type": "string"
        },
        "failure_reason": {
          "enum": [
            "BUILDBUCKET_FAILURE",
            "BUILD_FAILURE",
            "INFRA_FAILURE",
            "INVALID_BUILD_DEFINITION"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "location": "query",
          "type": "string"
        },
        "include_experimental": {
          "location": "query",
          "type": "boolean"
        },
        "max_builds": {
          "format": "int32",
          "location": "query",
          "type": "integer"
        },
        "result": {
          "enum": [
            "CANCELED",
            "FAILURE",
            "SUCCESS"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "location": "query",
          "type": "string"
        },
        "retry_of": {
          "format": "int64",
          "location": "query",
          "type": "string"
        },
        "start_cursor": {
          "location": "query",
          "type": "string"
        },
        "status": {
          "enum": [
            "COMPLETED",
            "INCOMPLETE",
            "SCHEDULED",
            "STARTED"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "location": "query",
          "type": "string"
        },
        "tag": {
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "path": "search",
      "response": {
        "$ref": "LegacyApiSearchResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "start": {
      "description": "Marks a build as started.",
      "httpMethod": "POST",
      "id": "buildbucket.start",
      "parameterOrder": [
        "id"
      ],
      "parameters": {
        "id": {
          "format": "int64",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "path": "builds/{id}/start",
      "request": {
        "$ref": "LegacyApiStartRequestBodyMessage",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "LegacyApiBuildResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "succeed": {
      "description": "Marks a build as succeeded.",
      "httpMethod": "POST",
      "id": "buildbucket.succeed",
      "parameterOrder": [
        "id"
      ],
      "parameters": {
        "id": {
          "format": "int64",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "path": "builds/{id}/succeed",
      "request": {
        "$ref": "LegacyApiSucceedRequestBodyMessage",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "LegacyApiBuildResponseMessage"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    }
  },
  "name": "buildbucket",
  "parameters": {
    "alt": {
      "default": "json",
      "description": "Data format for the response.",
      "enum": [
        "json"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json"
      ],
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
      "location": "query",
      "type": "string"
    },
    "userIp": {
      "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
      "location": "query",
      "type": "string"
    }
  },
  "protocol": "rest",
  "rootUrl": "https://cr-buildbucket.appspot.com/_ah/api/",
  "schemas": {
    "LegacyApiBucketMessage": {
      "id": "LegacyApiBucketMessage",
      "properties": {
        "config_file_content": {
          "type": "string"
        },
        "config_file_rev": {
          "type": "string"
        },
        "config_file_url": {
          "type": "string"
        },
        "error": {
          "$ref": "LegacyApiErrorMessage"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "project_id": {
          "required": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiBuildResponseMessage": {
      "id": "LegacyApiBuildResponseMessage",
      "properties": {
        "build": {
          "$ref": "LegacyApiCommonBuildMessage",
          "description": "Describes model.Build, see its docstring."
        },
        "error": {
          "$ref": "LegacyApiErrorMessage"
        }
      },
      "type": "object"
    },
    "LegacyApiCancelBatchRequestMessage": {
      "id": "LegacyApiCancelBatchRequestMessage",
      "properties": {
        "build_ids": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "result_details_json": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiCancelBatchResponseMessage": {
      "id": "LegacyApiCancelBatchResponseMessage",
      "properties": {
        "error": {
          "$ref": "LegacyApiErrorMessage"
        },
        "results": {
          "items": {
            "$ref": "LegacyApiCancelBatchResponseMessageOneResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LegacyApiCancelBatchResponseMessageOneResult": {
      "id": "LegacyApiCancelBatchResponseMessageOneResult",
      "properties": {
        "build": {
          "$ref": "LegacyApiCommonBuildMessage",
          "description": "Describes model.Build, see its docstring."
        },
        "build_id": {
          "format": "int64",
          "required": true,
          "type": "string"
        },
        "error": {
          "$ref": "LegacyApiErrorMessage"
        }
      },
      "type": "object"
    },
    "LegacyApiCancelRequestBodyMessage": {
      "id": "LegacyApiCancelRequestBodyMessage",
      "properties": {
        "result_details_json": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiCommonBuildMessage": {
      "description": "Describes model.Build, see its docstring.",
      "id": "LegacyApiCommonBuildMessage",
      "properties": {
        "bucket": {
          "required": true,
          "type": "string"
        },
        "canary": {
          "type": "boolean"
        },
        "canary_preference": {
          "enum": [
            "AUTO",
            "CANARY",
            "PROD"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "cancelation_reason": {
          "enum": [
            "CANCELED_EXPLICITLY",
            "TIMEOUT"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string"
        },
        "completed_ts": {
          "format": "int64",
          "type": "string"
        },
        "created_by": {
          "type": "string"
        },
        "created_ts": {
          "format": "int64",
          "type": "string"
        },
        "experimental": {
          "type": "boolean"
        },
        "failure_reason": {
          "enum": [
            "BUILDBUCKET_FAILURE",
            "BUILD_FAILURE",
            "INFRA_FAILURE",
            "INVALID_BUILD_DEFINITION"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "id": {
          "format": "int64",
          "required": true,
          "type": "string"
        },
        "lease_expiration_ts": {
          "format": "int64",
          "type": "string"
        },
        "lease_key": {
          "format": "int64",
          "type": "string"
        },
        "parameters_json": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "result": {
          "enum": [
            "CANCELED",
            "FAILURE",
            "SUCCESS"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "result_details_json": {
          "type": "string"
        },
        "retry_of": {
          "format": "int64",
          "type": "string"
        },
        "service_account": {
          "type": "string"
        },
        "started_ts": {
          "format": "int64",
          "type": "string"
        },
        "status": {
          "enum": [
            "COMPLETED",
            "SCHEDULED",
            "STARTED"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "status_changed_ts": {
          "format": "int64",
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "updated_ts": {
          "format": "int64",
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "utcnow_ts": {
          "format": "int64",
          "required": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiDeleteManyBuildsResponse": {
      "id": "LegacyApiDeleteManyBuildsResponse",
      "properties": {
        "error": {
          "$ref": "LegacyApiErrorMessage"
        }
      },
      "type": "object"
    },
    "LegacyApiErrorMessage": {
      "id": "LegacyApiErrorMessage",
      "properties": {
        "message": {
          "required": true,
          "type": "string"
        },
        "reason": {
          "enum": [
            "BUILDER_NOT_FOUND",
            "BUILD_IS_COMPLETED",
            "BUILD_NOT_FOUND",
            "CANNOT_LEASE_BUILD",
            "INVALID_BUILD_STATE",
            "INVALID_INPUT",
            "LEASE_EXPIRED"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "required": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiFailRequestBodyMessage": {
      "id": "LegacyApiFailRequestBodyMessage",
      "properties": {
        "failure_reason": {
          "enum": [
            "BUILDBUCKET_FAILURE",
            "BUILD_FAILURE",
            "INFRA_FAILURE",
            "INVALID_BUILD_DEFINITION"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "lease_key": {
          "format": "int64",
          "type": "string"
        },
        "new_tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "result_details_json": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiHeartbeatBatchRequestMessage": {
      "id": "LegacyApiHeartbeatBatchRequestMessage",
      "properties": {
        "heartbeats": {
          "items": {
            "$ref": "LegacyApiHeartbeatBatchRequestMessageOneHeartbeat"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LegacyApiHeartbeatBatchRequestMessageOneHeartbeat": {
      "id": "LegacyApiHeartbeatBatchRequestMessageOneHeartbeat",
      "properties": {
        "build_id": {
          "format": "int64",
          "required": true,
          "type": "string"
        },
        "lease_expiration_ts": {
          "format": "int64",
          "required": true,
          "type": "string"
        },
        "lease_key": {
          "format": "int64",
          "required": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiHeartbeatBatchResponseMessage": {
      "id": "LegacyApiHeartbeatBatchResponseMessage",
      "properties": {
        "error": {
          "$ref": "LegacyApiErrorMessage"
        },
        "results": {
          "items": {
            "$ref": "LegacyApiHeartbeatBatchResponseMessageOneHeartbeatResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LegacyApiHeartbeatBatchResponseMessageOneHeartbeatResult": {
      "id": "LegacyApiHeartbeatBatchResponseMessageOneHeartbeatResult",
      "properties": {
        "build_id": {
          "format": "int64",
          "required": true,
          "type": "string"
        },
        "error": {
          "$ref": "LegacyApiErrorMessage"
        },
        "lease_expiration_ts": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiHeartbeatRequestBodyMessage": {
      "id": "LegacyApiHeartbeatRequestBodyMessage",
      "properties": {
        "lease_expiration_ts": {
          "format": "int64",
          "required": true,
          "type": "string"
        },
        "lease_key": {
          "format": "int64",
          "required": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiLeaseRequestBodyMessage": {
      "id": "LegacyApiLeaseRequestBodyMessage",
      "properties": {
        "lease_expiration_ts": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiPauseResponse": {
      "id": "LegacyApiPauseResponse",
      "type": "object"
    },
    "LegacyApiPubSubCallbackMessage": {
      "id": "LegacyApiPubSubCallbackMessage",
      "properties": {
        "auth_token": {
          "type": "string"
        },
        "topic": {
          "required": true,
          "type": "string"
        },
        "user_data": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiPutBatchRequestMessage": {
      "id": "LegacyApiPutBatchRequestMessage",
      "properties": {
        "builds": {
          "items": {
            "$ref": "LegacyApiPutRequestMessage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LegacyApiPutBatchResponseMessage": {
      "id": "LegacyApiPutBatchResponseMessage",
      "properties": {
        "error": {
          "$ref": "LegacyApiErrorMessage"
        },
        "results": {
          "items": {
            "$ref": "LegacyApiPutBatchResponseMessageOneResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LegacyApiPutBatchResponseMessageOneResult": {
      "id": "LegacyApiPutBatchResponseMessageOneResult",
      "properties": {
        "build": {
          "$ref": "LegacyApiCommonBuildMessage",
          "description": "Describes model.Build, see its docstring."
        },
        "client_operation_id": {
          "type": "string"
        },
        "error": {
          "$ref": "LegacyApiErrorMessage"
        }
      },
      "type": "object"
    },
    "LegacyApiPutRequestMessage": {
      "id": "LegacyApiPutRequestMessage",
      "properties": {
        "bucket": {
          "required": true,
          "type": "string"
        },
        "canary_preference": {
          "enum": [
            "AUTO",
            "CANARY",
            "PROD"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "client_operation_id": {
          "type": "string"
        },
        "experimental": {
          "type": "boolean"
        },
        "lease_expiration_ts": {
          "format": "int64",
          "type": "string"
        },
        "parameters_json": {
          "type": "string"
        },
        "pubsub_callback": {
          "$ref": "LegacyApiPubSubCallbackMessage"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LegacyApiRetryRequestMessage": {
      "id": "LegacyApiRetryRequestMessage",
      "properties": {
        "client_operation_id": {
          "type": "string"
        },
        "lease_expiration_ts": {
          "format": "int64",
          "type": "string"
        },
        "pubsub_callback": {
          "$ref": "LegacyApiPubSubCallbackMessage"
        }
      },
      "type": "object"
    },
    "LegacyApiSearchResponseMessage": {
      "id": "LegacyApiSearchResponseMessage",
      "properties": {
        "builds": {
          "description": "Describes model.Build, see its docstring.",
          "items": {
            "$ref": "LegacyApiCommonBuildMessage"
          },
          "type": "array"
        },
        "error": {
          "$ref": "LegacyApiErrorMessage"
        },
        "next_cursor": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiStartRequestBodyMessage": {
      "id": "LegacyApiStartRequestBodyMessage",
      "properties": {
        "lease_key": {
          "format": "int64",
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LegacyApiSucceedRequestBodyMessage": {
      "id": "LegacyApiSucceedRequestBodyMessage",
      "properties": {
        "lease_key": {
          "format": "int64",
          "type": "string"
        },
        "new_tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "result_details_json": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "servicePath": "buildbucket/v1/",
  "title": "Build Bucket Service",
  "version": "v1"
}
