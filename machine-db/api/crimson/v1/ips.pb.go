// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/tetrafolium/luci-go/machine-db/api/crimson/v1/ips.proto

package crimson

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// An IP address in the database.
type IP struct {
	// The IPv4 address. Uniquely identifies this IP address.
	Ipv4 string `protobuf:"bytes,1,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	// The VLAN this IP address belongs to.
	Vlan int64 `protobuf:"varint,2,opt,name=vlan,proto3" json:"vlan,omitempty"`
	// The hostname this IP address is assigned to.
	Hostname             string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IP) Reset()         { *m = IP{} }
func (m *IP) String() string { return proto.CompactTextString(m) }
func (*IP) ProtoMessage()    {}
func (*IP) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1b68683c7632367, []int{0}
}

func (m *IP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IP.Unmarshal(m, b)
}
func (m *IP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IP.Marshal(b, m, deterministic)
}
func (m *IP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IP.Merge(m, src)
}
func (m *IP) XXX_Size() int {
	return xxx_messageInfo_IP.Size(m)
}
func (m *IP) XXX_DiscardUnknown() {
	xxx_messageInfo_IP.DiscardUnknown(m)
}

var xxx_messageInfo_IP proto.InternalMessageInfo

func (m *IP) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *IP) GetVlan() int64 {
	if m != nil {
		return m.Vlan
	}
	return 0
}

func (m *IP) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

// A request to list free IP addresses in the database.
type ListFreeIPsRequest struct {
	// The VLAN to list free IP addresses on.
	Vlan int64 `protobuf:"varint,1,opt,name=vlan,proto3" json:"vlan,omitempty"`
	// The maximum number of free IP addresses to return, or 0 to let the server decide.
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFreeIPsRequest) Reset()         { *m = ListFreeIPsRequest{} }
func (m *ListFreeIPsRequest) String() string { return proto.CompactTextString(m) }
func (*ListFreeIPsRequest) ProtoMessage()    {}
func (*ListFreeIPsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1b68683c7632367, []int{1}
}

func (m *ListFreeIPsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFreeIPsRequest.Unmarshal(m, b)
}
func (m *ListFreeIPsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFreeIPsRequest.Marshal(b, m, deterministic)
}
func (m *ListFreeIPsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFreeIPsRequest.Merge(m, src)
}
func (m *ListFreeIPsRequest) XXX_Size() int {
	return xxx_messageInfo_ListFreeIPsRequest.Size(m)
}
func (m *ListFreeIPsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFreeIPsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFreeIPsRequest proto.InternalMessageInfo

func (m *ListFreeIPsRequest) GetVlan() int64 {
	if m != nil {
		return m.Vlan
	}
	return 0
}

func (m *ListFreeIPsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// A response containing a list of IP addresses in the database.
type ListIPsResponse struct {
	// The IP addresses matching this request.
	Ips                  []*IP    `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIPsResponse) Reset()         { *m = ListIPsResponse{} }
func (m *ListIPsResponse) String() string { return proto.CompactTextString(m) }
func (*ListIPsResponse) ProtoMessage()    {}
func (*ListIPsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1b68683c7632367, []int{2}
}

func (m *ListIPsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIPsResponse.Unmarshal(m, b)
}
func (m *ListIPsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIPsResponse.Marshal(b, m, deterministic)
}
func (m *ListIPsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIPsResponse.Merge(m, src)
}
func (m *ListIPsResponse) XXX_Size() int {
	return xxx_messageInfo_ListIPsResponse.Size(m)
}
func (m *ListIPsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIPsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIPsResponse proto.InternalMessageInfo

func (m *ListIPsResponse) GetIps() []*IP {
	if m != nil {
		return m.Ips
	}
	return nil
}

func init() {
	proto.RegisterType((*IP)(nil), "crimson.IP")
	proto.RegisterType((*ListFreeIPsRequest)(nil), "crimson.ListFreeIPsRequest")
	proto.RegisterType((*ListIPsResponse)(nil), "crimson.ListIPsResponse")
}

func init() {
	proto.RegisterFile("github.com/tetrafolium/luci-go/machine-db/api/crimson/v1/ips.proto", fileDescriptor_e1b68683c7632367)
}

var fileDescriptor_e1b68683c7632367 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x4b, 0x6a, 0xc3, 0x30,
	0x10, 0x40, 0x51, 0xdc, 0x4f, 0xa2, 0x2c, 0x0a, 0x5a, 0x99, 0x96, 0x82, 0xf1, 0xca, 0x9b, 0x4a,
	0xfd, 0x2d, 0x7a, 0x81, 0x96, 0x1a, 0xba, 0x30, 0xea, 0x01, 0x8a, 0xe2, 0x0e, 0xf6, 0x40, 0xf4,
	0xa9, 0xc6, 0xf6, 0x22, 0xa7, 0x2f, 0x12, 0x21, 0x64, 0xf7, 0xe6, 0x31, 0x3c, 0x66, 0xf8, 0xdb,
	0xe0, 0x65, 0x3f, 0x46, 0x6f, 0x71, 0xb6, 0xd2, 0xc7, 0x41, 0xed, 0xe7, 0x1e, 0x95, 0x35, 0xfd,
	0x88, 0x0e, 0x1e, 0x7e, 0x77, 0xca, 0x04, 0x54, 0x7d, 0x44, 0x4b, 0xde, 0xa9, 0xe5, 0x49, 0x61,
	0x20, 0x19, 0xa2, 0x9f, 0xbc, 0xb8, 0x3e, 0xda, 0xfa, 0x93, 0xaf, 0xda, 0x4e, 0x08, 0x7e, 0x81,
	0x61, 0x79, 0x2d, 0x59, 0xc5, 0x9a, 0x8d, 0xce, 0x9c, 0xdc, 0xb2, 0x37, 0xae, 0x5c, 0x55, 0xac,
	0x29, 0x74, 0x66, 0x71, 0xcb, 0xd7, 0xa3, 0xa7, 0xc9, 0x19, 0x0b, 0x65, 0x91, 0x77, 0x4f, 0x73,
	0xfd, 0xce, 0xc5, 0x17, 0xd2, 0xf4, 0x11, 0x01, 0xda, 0x8e, 0x34, 0xfc, 0xcd, 0x40, 0xd3, 0xa9,
	0xc2, 0xce, 0x2a, 0x77, 0x7c, 0x13, 0xcc, 0x00, 0x3f, 0x84, 0x07, 0xc8, 0xf9, 0x4b, 0xbd, 0x4e,
	0xe2, 0x1b, 0x0f, 0x50, 0x3f, 0xf2, 0x9b, 0x94, 0xc9, 0x09, 0x0a, 0xde, 0x11, 0x88, 0x7b, 0x5e,
	0x60, 0xa0, 0x92, 0x55, 0x45, 0xb3, 0x7d, 0xde, 0xca, 0xe3, 0xe9, 0xb2, 0xed, 0x74, 0xf2, 0xbb,
	0xab, 0xfc, 0xd2, 0xcb, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0b, 0xca, 0x31, 0x26, 0x0e, 0x01,
	0x00, 0x00,
}
