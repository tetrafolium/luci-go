// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/tetrafolium/luci-go/machine-db/api/crimson/v1/nics.proto

package crimson

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A network interface in the database.
type NIC struct {
	// The name of this NIC. With machine, uniquely identifies this NIC.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The machine this NIC belongs to. With name, uniquely identifies this NIC.
	Machine string `protobuf:"bytes,2,opt,name=machine,proto3" json:"machine,omitempty"`
	// The MAC address associated with this NIC.
	MacAddress string `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// The switch this NIC is connected to.
	Switch string `protobuf:"bytes,4,opt,name=switch,proto3" json:"switch,omitempty"`
	// The switchport this NIC is connected to.
	Switchport int32 `protobuf:"varint,5,opt,name=switchport,proto3" json:"switchport,omitempty"`
	// The name of this NIC on the network.
	Hostname string `protobuf:"bytes,6,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// The IPv4 address associated with this NIC.
	Ipv4                 string   `protobuf:"bytes,7,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NIC) Reset()         { *m = NIC{} }
func (m *NIC) String() string { return proto.CompactTextString(m) }
func (*NIC) ProtoMessage()    {}
func (*NIC) Descriptor() ([]byte, []int) {
	return fileDescriptor_04c10592cdcb6ab3, []int{0}
}

func (m *NIC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NIC.Unmarshal(m, b)
}
func (m *NIC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NIC.Marshal(b, m, deterministic)
}
func (m *NIC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NIC.Merge(m, src)
}
func (m *NIC) XXX_Size() int {
	return xxx_messageInfo_NIC.Size(m)
}
func (m *NIC) XXX_DiscardUnknown() {
	xxx_messageInfo_NIC.DiscardUnknown(m)
}

var xxx_messageInfo_NIC proto.InternalMessageInfo

func (m *NIC) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NIC) GetMachine() string {
	if m != nil {
		return m.Machine
	}
	return ""
}

func (m *NIC) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *NIC) GetSwitch() string {
	if m != nil {
		return m.Switch
	}
	return ""
}

func (m *NIC) GetSwitchport() int32 {
	if m != nil {
		return m.Switchport
	}
	return 0
}

func (m *NIC) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *NIC) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

// A request to create a new NIC in the database.
type CreateNICRequest struct {
	// The NIC to create in the database.
	Nic                  *NIC     `protobuf:"bytes,1,opt,name=nic,proto3" json:"nic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNICRequest) Reset()         { *m = CreateNICRequest{} }
func (m *CreateNICRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNICRequest) ProtoMessage()    {}
func (*CreateNICRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_04c10592cdcb6ab3, []int{1}
}

func (m *CreateNICRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNICRequest.Unmarshal(m, b)
}
func (m *CreateNICRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNICRequest.Marshal(b, m, deterministic)
}
func (m *CreateNICRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNICRequest.Merge(m, src)
}
func (m *CreateNICRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNICRequest.Size(m)
}
func (m *CreateNICRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNICRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNICRequest proto.InternalMessageInfo

func (m *CreateNICRequest) GetNic() *NIC {
	if m != nil {
		return m.Nic
	}
	return nil
}

// A request to delete a NIC from the database.
type DeleteNICRequest struct {
	// The name of the NIC to delete.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The machine the NIC belongs to.
	Machine              string   `protobuf:"bytes,2,opt,name=machine,proto3" json:"machine,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNICRequest) Reset()         { *m = DeleteNICRequest{} }
func (m *DeleteNICRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNICRequest) ProtoMessage()    {}
func (*DeleteNICRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_04c10592cdcb6ab3, []int{2}
}

func (m *DeleteNICRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNICRequest.Unmarshal(m, b)
}
func (m *DeleteNICRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNICRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNICRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNICRequest.Merge(m, src)
}
func (m *DeleteNICRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNICRequest.Size(m)
}
func (m *DeleteNICRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNICRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNICRequest proto.InternalMessageInfo

func (m *DeleteNICRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteNICRequest) GetMachine() string {
	if m != nil {
		return m.Machine
	}
	return ""
}

// A request to list NICs in the database.
type ListNICsRequest struct {
	// The names of NICs to filter retrieved NICs on.
	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	// The machines to filter retrieved NICs on.
	Machines []string `protobuf:"bytes,2,rep,name=machines,proto3" json:"machines,omitempty"`
	// The MAC addresses to filter retrieved NICs on.
	MacAddresses []string `protobuf:"bytes,3,rep,name=mac_addresses,json=macAddresses,proto3" json:"mac_addresses,omitempty"`
	// The switches to filter retrieved NICs on.
	Switches []string `protobuf:"bytes,4,rep,name=switches,proto3" json:"switches,omitempty"`
	// The hostnames of NICs to filter retrieved NICs on.
	Hostnames []string `protobuf:"bytes,5,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	// The IPv4 addresses of NICs to filter retrieved NICs on.
	Ipv4S                []string `protobuf:"bytes,6,rep,name=ipv4s,proto3" json:"ipv4s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNICsRequest) Reset()         { *m = ListNICsRequest{} }
func (m *ListNICsRequest) String() string { return proto.CompactTextString(m) }
func (*ListNICsRequest) ProtoMessage()    {}
func (*ListNICsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_04c10592cdcb6ab3, []int{3}
}

func (m *ListNICsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNICsRequest.Unmarshal(m, b)
}
func (m *ListNICsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNICsRequest.Marshal(b, m, deterministic)
}
func (m *ListNICsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNICsRequest.Merge(m, src)
}
func (m *ListNICsRequest) XXX_Size() int {
	return xxx_messageInfo_ListNICsRequest.Size(m)
}
func (m *ListNICsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNICsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNICsRequest proto.InternalMessageInfo

func (m *ListNICsRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *ListNICsRequest) GetMachines() []string {
	if m != nil {
		return m.Machines
	}
	return nil
}

func (m *ListNICsRequest) GetMacAddresses() []string {
	if m != nil {
		return m.MacAddresses
	}
	return nil
}

func (m *ListNICsRequest) GetSwitches() []string {
	if m != nil {
		return m.Switches
	}
	return nil
}

func (m *ListNICsRequest) GetHostnames() []string {
	if m != nil {
		return m.Hostnames
	}
	return nil
}

func (m *ListNICsRequest) GetIpv4S() []string {
	if m != nil {
		return m.Ipv4S
	}
	return nil
}

// A response containing a list of NICs in the database.
type ListNICsResponse struct {
	// The NICs matching this request.
	Nics                 []*NIC   `protobuf:"bytes,1,rep,name=nics,proto3" json:"nics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNICsResponse) Reset()         { *m = ListNICsResponse{} }
func (m *ListNICsResponse) String() string { return proto.CompactTextString(m) }
func (*ListNICsResponse) ProtoMessage()    {}
func (*ListNICsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_04c10592cdcb6ab3, []int{4}
}

func (m *ListNICsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNICsResponse.Unmarshal(m, b)
}
func (m *ListNICsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNICsResponse.Marshal(b, m, deterministic)
}
func (m *ListNICsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNICsResponse.Merge(m, src)
}
func (m *ListNICsResponse) XXX_Size() int {
	return xxx_messageInfo_ListNICsResponse.Size(m)
}
func (m *ListNICsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNICsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNICsResponse proto.InternalMessageInfo

func (m *ListNICsResponse) GetNics() []*NIC {
	if m != nil {
		return m.Nics
	}
	return nil
}

// A request to update a NIC in the database.
type UpdateNICRequest struct {
	// The NIC to update in the database.
	Nic *NIC `protobuf:"bytes,1,opt,name=nic,proto3" json:"nic,omitempty"`
	// The fields to update in the NIC.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateNICRequest) Reset()         { *m = UpdateNICRequest{} }
func (m *UpdateNICRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNICRequest) ProtoMessage()    {}
func (*UpdateNICRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_04c10592cdcb6ab3, []int{5}
}

func (m *UpdateNICRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNICRequest.Unmarshal(m, b)
}
func (m *UpdateNICRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNICRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNICRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNICRequest.Merge(m, src)
}
func (m *UpdateNICRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNICRequest.Size(m)
}
func (m *UpdateNICRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNICRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNICRequest proto.InternalMessageInfo

func (m *UpdateNICRequest) GetNic() *NIC {
	if m != nil {
		return m.Nic
	}
	return nil
}

func (m *UpdateNICRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

func init() {
	proto.RegisterType((*NIC)(nil), "crimson.NIC")
	proto.RegisterType((*CreateNICRequest)(nil), "crimson.CreateNICRequest")
	proto.RegisterType((*DeleteNICRequest)(nil), "crimson.DeleteNICRequest")
	proto.RegisterType((*ListNICsRequest)(nil), "crimson.ListNICsRequest")
	proto.RegisterType((*ListNICsResponse)(nil), "crimson.ListNICsResponse")
	proto.RegisterType((*UpdateNICRequest)(nil), "crimson.UpdateNICRequest")
}

func init() {
	proto.RegisterFile("github.com/tetrafolium/luci-go/machine-db/api/crimson/v1/nics.proto", fileDescriptor_04c10592cdcb6ab3)
}

var fileDescriptor_04c10592cdcb6ab3 = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x55, 0xb6, 0x5f, 0x74, 0xba, 0x88, 0xca, 0x42, 0xc8, 0xaa, 0xd0, 0x12, 0x85, 0x4b, 0x2f,
	0xd8, 0xa2, 0xec, 0x05, 0x71, 0x01, 0x15, 0x21, 0x55, 0x82, 0x1e, 0x22, 0x71, 0x5e, 0xb9, 0x8e,
	0xb7, 0xb5, 0xb6, 0x8e, 0x43, 0x26, 0x59, 0xfe, 0x1a, 0x07, 0x7e, 0x1c, 0xf2, 0x38, 0xd9, 0x2e,
	0x7b, 0xeb, 0x6d, 0xde, 0x7b, 0x33, 0xf6, 0x9b, 0xa7, 0x81, 0x8f, 0x7b, 0x2f, 0xf4, 0xa1, 0xf6,
	0xce, 0xb6, 0x4e, 0xf8, 0x7a, 0x2f, 0x8f, 0xad, 0xb6, 0xd2, 0x29, 0x7d, 0xb0, 0xa5, 0x79, 0x57,
	0xec, 0xa4, 0xaa, 0xac, 0xd4, 0xb5, 0x75, 0xe8, 0x4b, 0x79, 0xff, 0x5e, 0x96, 0x56, 0xa3, 0xa8,
	0x6a, 0xdf, 0x78, 0x36, 0xe9, 0xe8, 0x45, 0xba, 0xf7, 0x7e, 0x7f, 0x34, 0x92, 0xe8, 0x5d, 0x7b,
	0x2b, 0x6f, 0xad, 0x39, 0x16, 0x37, 0x4e, 0xe1, 0x5d, 0x6c, 0xcd, 0xfe, 0x26, 0x30, 0xd8, 0x6e,
	0xd6, 0x8c, 0xc1, 0xb0, 0x54, 0xce, 0xf0, 0x24, 0x4d, 0x96, 0xd3, 0x9c, 0x6a, 0xc6, 0x61, 0xd2,
	0x7d, 0xc7, 0x2f, 0x88, 0xee, 0x21, 0x7b, 0x03, 0x33, 0xa7, 0xf4, 0x8d, 0x2a, 0x8a, 0xda, 0x20,
	0xf2, 0x01, 0xa9, 0xe0, 0x94, 0xfe, 0x12, 0x19, 0xf6, 0x0a, 0xc6, 0xf8, 0xdb, 0x36, 0xfa, 0xc0,
	0x87, 0xa4, 0x75, 0x88, 0x5d, 0x01, 0xc4, 0xaa, 0xf2, 0x75, 0xc3, 0x47, 0x69, 0xb2, 0x1c, 0xe5,
	0x8f, 0x18, 0xb6, 0x80, 0x67, 0x07, 0x8f, 0x0d, 0x59, 0x19, 0xd3, 0xe4, 0x03, 0x0e, 0x16, 0x6d,
	0x75, 0x7f, 0xcd, 0x27, 0xd1, 0x62, 0xa8, 0xb3, 0x15, 0xcc, 0xd7, 0xb5, 0x51, 0x8d, 0xd9, 0x6e,
	0xd6, 0xb9, 0xf9, 0xd5, 0x1a, 0x6c, 0xd8, 0x15, 0x0c, 0x4a, 0xab, 0x69, 0x93, 0xd9, 0xea, 0x52,
	0x74, 0x59, 0x88, 0xd0, 0x11, 0x84, 0xec, 0x33, 0xcc, 0xbf, 0x9a, 0xa3, 0xf9, 0x6f, 0xe6, 0xac,
	0xf5, 0xb3, 0x3f, 0x09, 0xbc, 0xf8, 0x6e, 0xb1, 0xd9, 0x6e, 0xd6, 0xd8, 0xbf, 0xf0, 0x12, 0x46,
	0x61, 0x0a, 0x79, 0x92, 0x0e, 0x96, 0xd3, 0x3c, 0x82, 0xb0, 0x4f, 0x37, 0x84, 0xfc, 0x82, 0x84,
	0x07, 0xcc, 0xde, 0xc2, 0xf3, 0x47, 0x21, 0x9a, 0x10, 0x63, 0x68, 0xb8, 0x3c, 0xc5, 0x18, 0x1f,
	0x88, 0xf1, 0x18, 0xe4, 0xc3, 0xf8, 0x40, 0x8f, 0xd9, 0x6b, 0x98, 0xf6, 0xe1, 0x20, 0x1f, 0x91,
	0x78, 0x22, 0x82, 0xa1, 0x10, 0x11, 0xf2, 0x71, 0x34, 0x44, 0x20, 0xbb, 0x86, 0xf9, 0xc9, 0x39,
	0x56, 0xbe, 0x44, 0xc3, 0x52, 0x18, 0x86, 0xe3, 0x21, 0xe7, 0x4f, 0x13, 0x23, 0x25, 0xf3, 0x30,
	0xff, 0x59, 0x15, 0x67, 0xc5, 0xcc, 0x3e, 0xc1, 0xac, 0xa5, 0x19, 0x3a, 0x37, 0x8a, 0x70, 0xb6,
	0x5a, 0x88, 0x78, 0x91, 0xa2, 0xbf, 0x48, 0xf1, 0x2d, 0x5c, 0xe4, 0x0f, 0x85, 0x77, 0x39, 0xc4,
	0xf6, 0x50, 0xef, 0xc6, 0xa4, 0x7f, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0x68, 0x76, 0x64, 0x6c,
	0x05, 0x03, 0x00, 0x00,
}
