// Copyright 2019 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.1
// source: github.com/tetrafolium/luci-go/resultdb/sink/proto/v1/sink.proto

package sinkpb

import prpc "github.com/tetrafolium/luci-go/grpc/prpc"

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ReportTestResultsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Test results to report.
	TestResults []*TestResult `protobuf:"bytes,1,rep,name=test_results,json=testResults,proto3" json:"test_results,omitempty"`
}

func (x *ReportTestResultsRequest) Reset() {
	*x = ReportTestResultsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportTestResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportTestResultsRequest) ProtoMessage() {}

func (x *ReportTestResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportTestResultsRequest.ProtoReflect.Descriptor instead.
func (*ReportTestResultsRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDescGZIP(), []int{0}
}

func (x *ReportTestResultsRequest) GetTestResults() []*TestResult {
	if x != nil {
		return x.TestResults
	}
	return nil
}

type ReportTestResultsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of unique identifiers that can be used to link to these results
	// or requested via luci.resultdb.v1.ResultDB service.
	TestResultNames []string `protobuf:"bytes,1,rep,name=test_result_names,json=testResultNames,proto3" json:"test_result_names,omitempty"`
}

func (x *ReportTestResultsResponse) Reset() {
	*x = ReportTestResultsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportTestResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportTestResultsResponse) ProtoMessage() {}

func (x *ReportTestResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportTestResultsResponse.ProtoReflect.Descriptor instead.
func (*ReportTestResultsResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDescGZIP(), []int{1}
}

func (x *ReportTestResultsResponse) GetTestResultNames() []string {
	if x != nil {
		return x.TestResultNames
	}
	return nil
}

var File_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDesc = []byte{
	0x0a, 0x36, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f,
	0x73, 0x69, 0x6e, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69,
	0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x69, 0x6e, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x3d, 0x67, 0x6f,
	0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75,
	0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x73, 0x69, 0x6e, 0x6b,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x18, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x69, 0x6e, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x74,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x47, 0x0a, 0x19, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x32, 0x7a, 0x0a, 0x04, 0x53, 0x69, 0x6e, 0x6b, 0x12, 0x72, 0x0a, 0x11, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x2c, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x69,
	0x6e, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x69, 0x6e, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x34, 0x5a, 0x32, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62,
	0x2f, 0x73, 0x69, 0x6e, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x73,
	0x69, 0x6e, 0x6b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDescData = file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDesc
)

func file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDescData)
	})
	return file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDescData
}

var file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_goTypes = []interface{}{
	(*ReportTestResultsRequest)(nil),  // 0: luci.resultsink.v1.ReportTestResultsRequest
	(*ReportTestResultsResponse)(nil), // 1: luci.resultsink.v1.ReportTestResultsResponse
	(*TestResult)(nil),                // 2: luci.resultsink.v1.TestResult
}
var file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_depIdxs = []int32{
	2, // 0: luci.resultsink.v1.ReportTestResultsRequest.test_results:type_name -> luci.resultsink.v1.TestResult
	0, // 1: luci.resultsink.v1.Sink.ReportTestResults:input_type -> luci.resultsink.v1.ReportTestResultsRequest
	1, // 2: luci.resultsink.v1.Sink.ReportTestResults:output_type -> luci.resultsink.v1.ReportTestResultsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_init() }
func file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_init() {
	if File_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto != nil {
		return
	}
	file_go_chromium_org_luci_resultdb_sink_proto_v1_test_result_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportTestResultsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportTestResultsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto = out.File
	file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_rawDesc = nil
	file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_goTypes = nil
	file_go_chromium_org_luci_resultdb_sink_proto_v1_sink_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SinkClient is the client API for Sink service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SinkClient interface {
	// Reports test results.
	ReportTestResults(ctx context.Context, in *ReportTestResultsRequest, opts ...grpc.CallOption) (*ReportTestResultsResponse, error)
}
type sinkPRPCClient struct {
	client *prpc.Client
}

func NewSinkPRPCClient(client *prpc.Client) SinkClient {
	return &sinkPRPCClient{client}
}

func (c *sinkPRPCClient) ReportTestResults(ctx context.Context, in *ReportTestResultsRequest, opts ...grpc.CallOption) (*ReportTestResultsResponse, error) {
	out := new(ReportTestResultsResponse)
	err := c.client.Call(ctx, "luci.resultsink.v1.Sink", "ReportTestResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type sinkClient struct {
	cc grpc.ClientConnInterface
}

func NewSinkClient(cc grpc.ClientConnInterface) SinkClient {
	return &sinkClient{cc}
}

func (c *sinkClient) ReportTestResults(ctx context.Context, in *ReportTestResultsRequest, opts ...grpc.CallOption) (*ReportTestResultsResponse, error) {
	out := new(ReportTestResultsResponse)
	err := c.cc.Invoke(ctx, "/luci.resultsink.v1.Sink/ReportTestResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SinkServer is the server API for Sink service.
type SinkServer interface {
	// Reports test results.
	ReportTestResults(context.Context, *ReportTestResultsRequest) (*ReportTestResultsResponse, error)
}

// UnimplementedSinkServer can be embedded to have forward compatible implementations.
type UnimplementedSinkServer struct {
}

func (*UnimplementedSinkServer) ReportTestResults(context.Context, *ReportTestResultsRequest) (*ReportTestResultsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportTestResults not implemented")
}

func RegisterSinkServer(s prpc.Registrar, srv SinkServer) {
	s.RegisterService(&_Sink_serviceDesc, srv)
}

func _Sink_ReportTestResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportTestResultsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SinkServer).ReportTestResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luci.resultsink.v1.Sink/ReportTestResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SinkServer).ReportTestResults(ctx, req.(*ReportTestResultsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sink_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luci.resultsink.v1.Sink",
	HandlerType: (*SinkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReportTestResults",
			Handler:    _Sink_ReportTestResults_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/tetrafolium/luci-go/resultdb/sink/proto/v1/sink.proto",
}
