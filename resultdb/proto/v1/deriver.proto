// Copyright 2020 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package luci.resultdb.v1;

import "google/api/field_behavior.proto";
import "github.com/tetrafolium/luci-go/resultdb/proto/v1/invocation.proto";

option go_package = "github.com/tetrafolium/luci-go/resultdb/proto/v1;resultpb";

// Service to derive test results.
//
// TODO: Remove. This is meant as a temporary service for the intermediary stage
// in which we derive invocations given swarming task IDs, rather than have
// tasks make RPCs directly.
service Deriver {

  // Derives an invocation and test results from a Chromium swarming task.
  // Returns the derived invocation; test results should retrieved using
  // ResultDB.ListTestResults or ResultDB.QueryTestResults.
  rpc DeriveChromiumInvocation(DeriveChromiumInvocationRequest) returns (Invocation) {};
}

// A request message for DeriveChromiumInvocation RPC.
message DeriveChromiumInvocationRequest {

  // Identifies a swarming task.
  message SwarmingTask {
    // Swarming host of task.
    string hostname = 1 [ (google.api.field_behavior) = REQUIRED ];

    // ID of swarming task to process and insert.
    //
    // The task should have tags:
    //  test_id_prefix: test_id_prefix for each test suite, e.g.
    //    "ninja://chrome/test:telemetry_gpu_integration_test/trace_test/".
    //  ninja_target: the fully-qualified ninja target used to compile the test
    //    binary used in the task, e.g. "//chrome/test:browser_tests".
    //  bucket: the LUCI bucket of the parent build
    //  buildername: the LUCI builder of the parent build.
    //  test_suite: a value of "test" property in any of the JSON files in
    //    https://chromium.googlesource.com/chromium/src/+/master/testing/buildbot/
    //    used to create the swarming task.
    string id = 2 [ (google.api.field_behavior) = REQUIRED ];
  }

  // Derive the invocation from the Swarming task.
  SwarmingTask swarming_task = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// Used a google.rpc.PreconditionFailure.Violation.type returned as a Status
// detail by DeriveChromiumInvocation when responding with a PreconditionFailure status
// code.
enum DeriveChromiumInvocationPreconditionFailureType {
  DERIVE_CHROMIUM_INVOCATION_PRECONDITION_FAILURE_TYPE_UNSPECIFIED = 0;
  INCOMPLETE_CHROMIUM_SWARMING_TASK = 1;
}
