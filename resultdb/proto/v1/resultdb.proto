// Copyright 2019 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package luci.resultdb.v1;

import "google/api/field_behavior.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "github.com/tetrafolium/luci-go/resultdb/proto/v1/artifact.proto";
import "github.com/tetrafolium/luci-go/resultdb/proto/v1/common.proto";
import "github.com/tetrafolium/luci-go/resultdb/proto/v1/invocation.proto";
import "github.com/tetrafolium/luci-go/resultdb/proto/v1/predicate.proto";
import "github.com/tetrafolium/luci-go/resultdb/proto/v1/test_result.proto";

option go_package = "github.com/tetrafolium/luci-go/resultdb/proto/v1;resultpb";

// Service to read test results.
service ResultDB {
  // Retrieves an invocation.
  rpc GetInvocation(GetInvocationRequest) returns (Invocation) {};

  // == Test results ===========================================================

  // Retrieves a test result.
  rpc GetTestResult(GetTestResultRequest) returns (TestResult) {};

  // Retrieves test results for a parent invocation.
  //
  // Note: response does not contain test results of included invocations.
  // Use QueryTestResults instead.
  rpc ListTestResults(ListTestResultsRequest)
      returns (ListTestResultsResponse) {};

  // Retrieves a test exoneration.
  rpc GetTestExoneration(GetTestExonerationRequest) returns (TestExoneration) {
  };

  // Retrieves test exonerations for a parent invocation.
  //
  // Note: response does not contain test results of included invocations.
  // Use QueryTestExonerations instead.
  rpc ListTestExonerations(ListTestExonerationsRequest)
      returns (ListTestExonerationsResponse) {};

  // Retrieves test results from an invocation, recursively.
  // Supports invocation inclusions.
  // Supports advanced filtering.
  rpc QueryTestResults(QueryTestResultsRequest)
      returns (QueryTestResultsResponse) {};

  // Retrieves test exonerations from an invocation.
  // Supports invocation inclusions.
  // Supports advanced filtering.
  rpc QueryTestExonerations(QueryTestExonerationsRequest)
      returns (QueryTestExonerationsResponse) {};

  // Retrieves the test result statistics of an invocation.
  // Currently supports total number of test results belong to the invocation,
  // directly and indirectly.
  rpc QueryTestResultStatistics(QueryTestResultStatisticsRequest)
      returns (QueryTestResultStatisticsResponse) {};

  // == Artifacts =============================================================

  // Retrieves an artifact.
  rpc GetArtifact(GetArtifactRequest) returns (Artifact) {};

  // Retrieves artifacts for a parent invocation/testResult.
  //
  // Note: if the parent is an invocation, the response does not contain
  // artifacts of included invocations. Use QueryArtifacts instead.
  rpc ListArtifacts(ListArtifactsRequest) returns (ListArtifactsResponse) {};

  // Retrieves artifacts from an invocation, recursively.
  // Can retrieve artifacts of test results included in the invocation
  // directly or indirectly.
  // Supports invocation inclusions.
  rpc QueryArtifacts(QueryArtifactsRequest) returns (QueryArtifactsResponse) {};

  rpc GetTestResultHistory (GetTestResultHistoryRequest) returns (
    GetTestResultHistoryResponse) {};
}

// A request message for GetInvocation RPC.
message GetInvocationRequest {
  // The name of the invocation to request, see Invocation.name.
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// A request message for GetTestResult RPC.
message GetTestResultRequest {
  // The name of the test result to request, see TestResult.name.
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// A request message for ListTestResults RPC.
message ListTestResultsRequest {
  // Name of the invocation, e.g. "invocations/{id}".
  string invocation = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The maximum number of test results to return.
  //
  // The service may return fewer than this value.
  // If unspecified, at most 100 test results will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListTestResults` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListTestResults` MUST
  // match the call that provided the page token.
  string page_token = 3;

  // Fields to include in the response.
  // If not set, the default mask is used where summary_html and tags are
  // excluded.
  // Test result names will always be included even if "name" is not a part of
  // the mask.
  google.protobuf.FieldMask read_mask = 4;
}

// A response message for ListTestResults RPC.
message ListTestResultsResponse {
  // The test results from the specified invocation.
  repeated TestResult test_results = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there were no subsequent pages at the time of
  // request.
  // If the invocation is not finalized, more results may appear later.
  string next_page_token = 2;
}

// A request message for GetTestExoneration RPC.
message GetTestExonerationRequest {
  // The name of the test exoneration to request, see TestExoneration.name.
  string name = 1;
}

// A request message for ListTestExonerations RPC.
message ListTestExonerationsRequest {
  // Name of the invocation, e.g. "invocations/{id}".
  string invocation = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The maximum number of test exonerations to return.
  //
  // The service may return fewer than this value.
  // If unspecified, at most 100 test exonerations will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListTestExonerations` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListTestExonerations`
  // MUST match the call that provided the page token.
  string page_token = 3;
}

// A response message for ListTestExonerations RPC.
message ListTestExonerationsResponse {
  // The test exonerations from the specified invocation.
  repeated TestExoneration test_exonerations = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there were no subsequent pages at the time of
  // request.
  // If the invocation is not finalized, more results may appear later.
  string next_page_token = 2;
}

// A request message for QueryTestResults RPC.
message QueryTestResultsRequest {
  // Retrieve test results included in these invocations, directly or indirectly
  // (via Invocation.included_invocations).
  //
  // Specifying multiple invocations is equivalent to querying one invocation
  // that includes these.
  repeated string invocations = 1;

  // A test result in the response must satisfy this predicate.
  TestResultPredicate predicate = 2;

  // The version of the state from which the response draws is allowed to be
  // stale up to this duration.
  // For example, with max staleness of 5m, the response might not contain
  // results uploaded 4m ago.
  // Choosing a larger duration may reduce request latency.
  // Must be <=30m.
  google.protobuf.Duration max_staleness = 3;

  // The maximum number of test results to return.
  //
  // The service may return fewer than this value.
  // If unspecified, at most 100 test results will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 4;

  // A page token, received from a previous `QueryTestResults` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `QueryTestResults` MUST
  // match the call that provided the page token.
  string page_token = 5;

  // Fields to include in the response.
  // If not set, the default mask is used where summary_html and tags are
  // excluded.
  // Test result names will always be included even if "name" is not a part of
  // the mask.
  google.protobuf.FieldMask read_mask = 6;
}

// A response message for QueryTestResults RPC.
message QueryTestResultsResponse {
  // Matched test results.
  // Ordered by parent invocation ID, test ID and result ID.
  repeated TestResult test_results = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there were no subsequent pages at the time of
  // request.
  string next_page_token = 2;
}

// A request message for QueryTestExonerations RPC.
message QueryTestExonerationsRequest {
  // Retrieve test exonerations included in these invocations, directly or
  // indirectly (via Invocation.included_invocations).
  //
  // Specifying multiple invocations is equivalent to querying one invocation
  // that includes these.
  repeated string invocations = 1;

  // A test exoneration in the response must satisfy this predicate.
  TestExonerationPredicate predicate = 2
      [ (google.api.field_behavior) = REQUIRED ];

  // The version of the state from which the response draws is allowed to be
  // stale up to this duration.
  // For example, with max staleness of 5m, the response might not contain
  // results uploaded 4m ago.
  // Choosing a larger duration may reduce request latency.
  // Must be <=30m.
  google.protobuf.Duration max_staleness = 3;

  // The maximum number of test exonerations to return.
  //
  // The service may return fewer than this value.
  // If unspecified, at most 100 test exonerations will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 4;

  // A page token, received from a previous `QueryTestExonerations` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `QueryTestExonerations`
  // MUST match the call that provided the page token.
  string page_token = 5;
}

// A response message for QueryTestExonerations RPC.
message QueryTestExonerationsResponse {
  // The test exonerations matching the predicate.
  // Ordered by parent invocation ID, test ID and exoneration ID.
  repeated TestExoneration test_exonerations = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there were no subsequent pages at the time of
  // request.
  string next_page_token = 2;
}

// A request message for QueryTestResultStatistics RPC.
message QueryTestResultStatisticsRequest {
  // Retrieve statistics of test result belong to these invocations,
  // directly or indirectly (via Invocation.included_invocations).
  //
  // Specifying multiple invocations is equivalent to requesting one invocation
  // that includes these.
  repeated string invocations = 1;

  // The version of the state from which the response draws is allowed to be
  // stale up to this duration.
  // For example, with max staleness of 5m, the response might not contain
  // results uploaded 4m ago.
  // Choosing a larger duration may reduce request latency.
  // Must be <=30m.
  google.protobuf.Duration max_staleness = 2;
}

// A response message for QueryTestResultStatistics RPC.
message QueryTestResultStatisticsResponse {
  // Total number of test results.
  int64 total_test_results = 1;
}

// A request message for GetArtifact RPC.
message GetArtifactRequest {
  // The name of the artifact to request, see Artifact.name.
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// A request message for ListArtifacts RPC.
message ListArtifactsRequest {
  // Name of the parent, e.g. an invocation (see Invocation.name) or
  // a test result (see TestResult.name).
  string parent = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The maximum number of artifacts to return.
  //
  // The service may return fewer than this value.
  // If unspecified, at most 100 artifacts will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListArtifacts` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListArtifacts` MUST
  // match the call that provided the page token.
  string page_token = 3;
}

// A response message for ListArtifacts RPC.
message ListArtifactsResponse {
  // The artifacts from the specified parent.
  repeated Artifact artifacts = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there were no subsequent pages at the time of
  // request.
  // If the invocation is not finalized, more results may appear later.
  string next_page_token = 2;
}

// A request message for QueryArtifacts RPC.
message QueryArtifactsRequest {
  // Retrieve artifacts included in these invocations, directly or indirectly
  // (via Invocation.included_invocations and via contained test results).
  //
  // Specifying multiple invocations is equivalent to querying one invocation
  // that includes these.
  repeated string invocations = 1;

  // A set of Invocation's outgoing edge types.
  message EdgeTypeSet {
    // The edges represented by Invocation.included_invocations field.
    bool included_invocations = 1;
    // The parent-child relationship between Invocation and TestResult.
    bool test_results = 2;
  }

  // Specifies which edges to follow when retrieving directly/indirectly
  // included artifacts.
  // For example,
  // - to retrieve only invocation-level artifacts, use
  //   {included_invocations: true}.
  // - to retrieve only test-result-level artifacts, use {test_results: true}.
  //
  // By default, follows all edges.
  EdgeTypeSet follow_edges = 2; // defaults to All.

  // If an Artifact belongs to a TestResult, then the test result must satisfy
  // this predicate.
  // Note: this predicate does NOT apply to invocation-level artifacts.
  // To exclude them from the response, use follow_edges.
  TestResultPredicate test_result_predicate = 3;

  // The version of the state from which the response draws is allowed to be
  // stale up to this duration.
  // For example, with max staleness of 5m, the response might not contain
  // artifacts uploaded 4m ago.
  // Choosing a larger duration may reduce request latency.
  // Must be <=30m.
  google.protobuf.Duration max_staleness = 4;

  // The maximum number of artifacts to return.
  //
  // The service may return fewer than this value.
  // If unspecified, at most 100 artifacts will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 5;

  // A page token, received from a previous `QueryArtifacts` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `QueryArtifacts` MUST
  // match the call that provided the page token.
  string page_token = 6;
}

// A response message for QueryArtifacts RPC.
message QueryArtifactsResponse {
  // Matched artifacts.
  // First invocation-level artifacts, then test-result-level artifacts
  // ordered by parent invocation ID, test ID and artifact ID.
  repeated Artifact artifacts = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there were no subsequent pages at the time of
  // request.
  string next_page_token = 2;
}

// A request message for GetTestResultHistory RPC.
message GetTestResultHistoryRequest {
  // Required. This needs to match the realm that the data being queried exists
  // in.
  // I.e. For a result to be part of the history, it needs to be contained
  // transitively by an invocation in this realm.
  string realm = 1;

  // Specify the subset of test ids to request history for.
  string test_id_regexp = 2;

  // Specify the subset of test variants to request history for.
  VariantPredicate variant_predicate = 3;

  // Specify a range of commit positions or a range of timestamps.
  // This is required for the service to know which index to query.
  //
  // Whether the test results are indexed by commit position and/or timestamp is
  // determined according to invocation.history_options.
  oneof range {
    CommitPositionRange cp_range = 4;
    TimeRange time_range = 5;
  }

  // Specifies the number of results per page.
  int64 page_size = 6;

  // Populate this field to get subsequent pages if the original response
  // contained a next page token.
  // A request for the next page of the results must be identical to the
  // original one except for this field.
  string page_token = 101;
}

// A response message for GetTestResultHistory RPC.
message GetTestResultHistoryResponse {
  message Entry {
    // Commit position of the invocation that contains the result, if available.
    CommitPosition commit_position = 1;

    // Creation time of the invocation that contains the result.
    google.protobuf.Timestamp invocation_timestamp = 2;

    // The result itself. Masked by the `fields` field of
    // `GetResultHistoryRequest`.
    TestResult result = 3;
  }

  // The actual results, the order will match the requested range.
  // If multiple entries exist for the same commit position/timestamp they will
  // be internally ordered by TestId, and then by VariantHash.
  repeated Entry entries = 1;

  // This field will be set if there are more results to return.
  // To get the next page of data, send the same request again, but include this
  // token.
  string next_page_token = 2;
}
