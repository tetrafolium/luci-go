// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/tetrafolium/luci-go/gce/api/config/v1/service.proto

package config

import prpc "github.com/tetrafolium/luci-go/grpc/prpc"

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A request to delete a config.
type DeleteRequest struct {
	// The id of the config to delete.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4344ecc87758d8d4, []int{0}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// A request to create or update a config.
type EnsureRequest struct {
	// The id of the config to ensure.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The config.
	Config               *Config  `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnsureRequest) Reset()         { *m = EnsureRequest{} }
func (m *EnsureRequest) String() string { return proto.CompactTextString(m) }
func (*EnsureRequest) ProtoMessage()    {}
func (*EnsureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4344ecc87758d8d4, []int{1}
}

func (m *EnsureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnsureRequest.Unmarshal(m, b)
}
func (m *EnsureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnsureRequest.Marshal(b, m, deterministic)
}
func (m *EnsureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnsureRequest.Merge(m, src)
}
func (m *EnsureRequest) XXX_Size() int {
	return xxx_messageInfo_EnsureRequest.Size(m)
}
func (m *EnsureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnsureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnsureRequest proto.InternalMessageInfo

func (m *EnsureRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EnsureRequest) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

// A request to get an existing config.
type GetRequest struct {
	// The id of the config to get.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4344ecc87758d8d4, []int{2}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// A request to list existing configs.
type ListRequest struct {
	// The value of next_page_token received in a ListResponse. Used to get the
	// next page of configs. If empty, gets the first page.
	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The maximum number of results to include in the response.
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4344ecc87758d8d4, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// A response to a request to list configs.
type ListResponse struct {
	// The configs.
	Configs []*Config `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	// The value to use as the page_token in a ListRequest to get the next page of
	// configs. If empty, there are no more configs.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4344ecc87758d8d4, []int{4}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetConfigs() []*Config {
	if m != nil {
		return m.Configs
	}
	return nil
}

func (m *ListResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// A request to update an existing config.
type UpdateRequest struct {
	// The id of the config to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The config.
	Config *Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// The fields to update. Only config.current_amount may be updated.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4344ecc87758d8d4, []int{5}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRequest) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *UpdateRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

func init() {
	proto.RegisterType((*DeleteRequest)(nil), "config.DeleteRequest")
	proto.RegisterType((*EnsureRequest)(nil), "config.EnsureRequest")
	proto.RegisterType((*GetRequest)(nil), "config.GetRequest")
	proto.RegisterType((*ListRequest)(nil), "config.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "config.ListResponse")
	proto.RegisterType((*UpdateRequest)(nil), "config.UpdateRequest")
}

func init() {
	proto.RegisterFile("github.com/tetrafolium/luci-go/gce/api/config/v1/service.proto", fileDescriptor_4344ecc87758d8d4)
}

var fileDescriptor_4344ecc87758d8d4 = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xcf, 0x8f, 0x93, 0x40,
	0x14, 0xc7, 0x03, 0x55, 0x74, 0x5f, 0x65, 0x4d, 0xc6, 0x1f, 0x21, 0xac, 0x46, 0xc2, 0x61, 0x53,
	0x2f, 0x4c, 0x76, 0xd7, 0xc4, 0x83, 0x47, 0x5d, 0x1b, 0x13, 0x4d, 0x0c, 0xea, 0x19, 0x29, 0xbc,
	0xe2, 0xa4, 0xc0, 0x20, 0x33, 0x34, 0xda, 0xb3, 0x07, 0xff, 0x6c, 0x33, 0x33, 0x60, 0x4b, 0x6b,
	0x13, 0x93, 0x3d, 0x75, 0xfa, 0x7d, 0xdf, 0x79, 0xdf, 0x37, 0xef, 0x03, 0xbc, 0x28, 0x78, 0x94,
	0x7d, 0x6b, 0x79, 0xc5, 0xba, 0x2a, 0xe2, 0x6d, 0x41, 0xcb, 0x2e, 0x63, 0xb4, 0xc8, 0x90, 0xa6,
	0x0d, 0xa3, 0x19, 0xaf, 0x97, 0xac, 0xa0, 0xeb, 0x0b, 0x2a, 0xb0, 0x5d, 0xb3, 0x0c, 0xa3, 0xa6,
	0xe5, 0x92, 0x13, 0xc7, 0x14, 0xfc, 0xb3, 0x82, 0xf3, 0xa2, 0x44, 0xaa, 0xd5, 0x45, 0xb7, 0xa4,
	0x58, 0x35, 0xf2, 0xa7, 0x31, 0xf9, 0xc1, 0x7e, 0x71, 0xc9, 0xb0, 0xcc, 0x93, 0x2a, 0x15, 0xab,
	0xde, 0x71, 0xf5, 0x9f, 0xe1, 0xe6, 0x64, 0x2e, 0x85, 0xcf, 0xc0, 0x7d, 0x83, 0x25, 0x4a, 0x8c,
	0xf1, 0x7b, 0x87, 0x42, 0x92, 0x53, 0xb0, 0x59, 0xee, 0x59, 0x81, 0x35, 0x3b, 0x89, 0x6d, 0x96,
	0x87, 0x73, 0x70, 0xaf, 0x6b, 0xd1, 0xb5, 0xc7, 0x0c, 0xe4, 0x1c, 0xfa, 0xf9, 0x3d, 0x3b, 0xb0,
	0x66, 0xd3, 0xcb, 0xd3, 0xa8, 0x0f, 0x78, 0xad, 0x7f, 0xe2, 0xbe, 0x1a, 0x3e, 0x01, 0x98, 0xa3,
	0x3c, 0x16, 0xf3, 0x0e, 0xa6, 0xef, 0x99, 0xf8, 0x5b, 0x7e, 0x0a, 0xd0, 0xa4, 0x05, 0x26, 0x92,
	0xaf, 0xb0, 0xee, 0x6d, 0x27, 0x4a, 0xf9, 0xac, 0x04, 0x72, 0x06, 0xfa, 0x4f, 0x22, 0xd8, 0x06,
	0x75, 0xec, 0xed, 0xf8, 0xae, 0x12, 0x3e, 0xb1, 0x0d, 0x86, 0x5f, 0xe1, 0x9e, 0x69, 0x25, 0x1a,
	0x5e, 0x0b, 0x24, 0x33, 0xb8, 0x63, 0x46, 0x10, 0x9e, 0x15, 0x4c, 0xfe, 0x31, 0xe1, 0x50, 0x26,
	0xe7, 0x70, 0xbf, 0xc6, 0x1f, 0x32, 0xd9, 0x89, 0xb6, 0x75, 0xb4, 0xab, 0xe4, 0x8f, 0x43, 0x7c,
	0xf8, 0xcb, 0x02, 0xf7, 0x4b, 0x93, 0xa7, 0xf2, 0xa6, 0x4b, 0x21, 0xaf, 0x60, 0xda, 0xe9, 0x46,
	0x1a, 0xa4, 0x37, 0xd1, 0x66, 0x3f, 0x32, 0xac, 0xa3, 0x81, 0x75, 0xf4, 0x56, 0xb1, 0xfe, 0x90,
	0x8a, 0x55, 0x0c, 0xc6, 0xae, 0xce, 0x97, 0xbf, 0x6d, 0x70, 0x4d, 0xbf, 0xae, 0x4d, 0x25, 0xe3,
	0x35, 0x79, 0x09, 0x8e, 0xa1, 0x49, 0x1e, 0x0d, 0x81, 0x23, 0xba, 0xfe, 0xe3, 0x83, 0xd6, 0xd7,
	0xea, 0x1b, 0x23, 0x14, 0x1c, 0x43, 0x79, 0x7b, 0x71, 0x44, 0xdd, 0xdf, 0x7b, 0x00, 0x79, 0x0e,
	0x93, 0x39, 0x4a, 0x42, 0x06, 0x79, 0x8b, 0xf6, 0xc0, 0x7a, 0x01, 0xb7, 0x14, 0x0f, 0xf2, 0x60,
	0xd0, 0x77, 0x40, 0xfb, 0x0f, 0xc7, 0x62, 0x8f, 0x8c, 0x82, 0x63, 0xf6, 0xbb, 0x1d, 0x67, 0xb4,
	0xef, 0xfd, 0x8c, 0x85, 0xa3, 0xdf, 0x73, 0xf5, 0x27, 0x00, 0x00, 0xff, 0xff, 0xcd, 0xf1, 0x1b,
	0xb9, 0x81, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConfigurationClient is the client API for Configuration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigurationClient interface {
	// Delete deletes a config.
	// Internal API.
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Ensure ensures a config exists.
	// Creates a new config or updates an existing one as necessary.
	// Internal API.
	Ensure(ctx context.Context, in *EnsureRequest, opts ...grpc.CallOption) (*Config, error)
	// Get returns an existing config.
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Config, error)
	// List returns existing configs.
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	// Update updates a config.
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Config, error)
}
type configurationPRPCClient struct {
	client *prpc.Client
}

func NewConfigurationPRPCClient(client *prpc.Client) ConfigurationClient {
	return &configurationPRPCClient{client}
}

func (c *configurationPRPCClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.client.Call(ctx, "config.Configuration", "Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationPRPCClient) Ensure(ctx context.Context, in *EnsureRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.client.Call(ctx, "config.Configuration", "Ensure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationPRPCClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.client.Call(ctx, "config.Configuration", "Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationPRPCClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.client.Call(ctx, "config.Configuration", "List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationPRPCClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.client.Call(ctx, "config.Configuration", "Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type configurationClient struct {
	cc grpc.ClientConnInterface
}

func NewConfigurationClient(cc grpc.ClientConnInterface) ConfigurationClient {
	return &configurationClient{cc}
}

func (c *configurationClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/config.Configuration/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) Ensure(ctx context.Context, in *EnsureRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/config.Configuration/Ensure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/config.Configuration/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/config.Configuration/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/config.Configuration/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigurationServer is the server API for Configuration service.
type ConfigurationServer interface {
	// Delete deletes a config.
	// Internal API.
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
	// Ensure ensures a config exists.
	// Creates a new config or updates an existing one as necessary.
	// Internal API.
	Ensure(context.Context, *EnsureRequest) (*Config, error)
	// Get returns an existing config.
	Get(context.Context, *GetRequest) (*Config, error)
	// List returns existing configs.
	List(context.Context, *ListRequest) (*ListResponse, error)
	// Update updates a config.
	Update(context.Context, *UpdateRequest) (*Config, error)
}

// UnimplementedConfigurationServer can be embedded to have forward compatible implementations.
type UnimplementedConfigurationServer struct {
}

func (*UnimplementedConfigurationServer) Delete(ctx context.Context, req *DeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedConfigurationServer) Ensure(ctx context.Context, req *EnsureRequest) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ensure not implemented")
}
func (*UnimplementedConfigurationServer) Get(ctx context.Context, req *GetRequest) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedConfigurationServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedConfigurationServer) Update(ctx context.Context, req *UpdateRequest) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterConfigurationServer(s prpc.Registrar, srv ConfigurationServer) {
	s.RegisterService(&_Configuration_serviceDesc, srv)
}

func _Configuration_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Configuration/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_Ensure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnsureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).Ensure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Configuration/Ensure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).Ensure(ctx, req.(*EnsureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Configuration/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Configuration/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Configuration/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Configuration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.Configuration",
	HandlerType: (*ConfigurationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Delete",
			Handler:    _Configuration_Delete_Handler,
		},
		{
			MethodName: "Ensure",
			Handler:    _Configuration_Ensure_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Configuration_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Configuration_List_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Configuration_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/tetrafolium/luci-go/gce/api/config/v1/service.proto",
}
