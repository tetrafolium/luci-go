// Copyright 2016 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.1
// source: tmp/2.proto

package test

import prpc "github.com/tetrafolium/luci-go/grpc/prpc"

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_tmp_2_proto protoreflect.FileDescriptor

var file_tmp_2_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x6d, 0x70, 0x2f, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74,
	0x65, 0x73, 0x74, 0x32, 0x06, 0x0a, 0x04, 0x53, 0x32, 0x5f, 0x30, 0x32, 0x06, 0x0a, 0x04, 0x53,
	0x32, 0x5f, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_tmp_2_proto_goTypes = []interface{}{}
var file_tmp_2_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tmp_2_proto_init() }
func file_tmp_2_proto_init() {
	if File_tmp_2_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tmp_2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_tmp_2_proto_goTypes,
		DependencyIndexes: file_tmp_2_proto_depIdxs,
	}.Build()
	File_tmp_2_proto = out.File
	file_tmp_2_proto_rawDesc = nil
	file_tmp_2_proto_goTypes = nil
	file_tmp_2_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// S2_0Client is the client API for S2_0 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type S2_0Client interface {
}
type s2_0PRPCClient struct {
	client *prpc.Client
}

func NewS2_0PRPCClient(client *prpc.Client) S2_0Client {
	return &s2_0PRPCClient{client}
}

type s2_0Client struct {
	cc grpc.ClientConnInterface
}

func NewS2_0Client(cc grpc.ClientConnInterface) S2_0Client {
	return &s2_0Client{cc}
}

// S2_0Server is the server API for S2_0 service.
type S2_0Server interface {
}

// UnimplementedS2_0Server can be embedded to have forward compatible implementations.
type UnimplementedS2_0Server struct {
}

func RegisterS2_0Server(s prpc.Registrar, srv S2_0Server) {
	s.RegisterService(&_S2_0_serviceDesc, srv)
}

var _S2_0_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.S2_0",
	HandlerType: (*S2_0Server)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "tmp/2.proto",
}

// S2_1Client is the client API for S2_1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type S2_1Client interface {
}
type s2_1PRPCClient struct {
	client *prpc.Client
}

func NewS2_1PRPCClient(client *prpc.Client) S2_1Client {
	return &s2_1PRPCClient{client}
}

type s2_1Client struct {
	cc grpc.ClientConnInterface
}

func NewS2_1Client(cc grpc.ClientConnInterface) S2_1Client {
	return &s2_1Client{cc}
}

// S2_1Server is the server API for S2_1 service.
type S2_1Server interface {
}

// UnimplementedS2_1Server can be embedded to have forward compatible implementations.
type UnimplementedS2_1Server struct {
}

func RegisterS2_1Server(s prpc.Registrar, srv S2_1Server) {
	s.RegisterService(&_S2_1_serviceDesc, srv)
}

var _S2_1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.S2_1",
	HandlerType: (*S2_1Server)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "tmp/2.proto",
}
